<div class="container-fluid">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="mb-1">
                <i class="bi bi-calendar-event me-2"></i>Calendar Download Laporan
            </h2>
            <p class="text-muted mb-0">Kelola dan download file laporan berdasarkan tanggal</p>
        </div>
        <a href="/laporan" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left me-2"></i>Kembali
        </a>
    </div>

    <!-- Filter Section -->
    <div class="card filter-card">
        <h5 class="mb-4">
            <i class="bi bi-funnel-fill me-2 text-primary"></i>Filter & Settings
        </h5>

        <form id="filterForm" class="row g-3">
            <div class="col-lg-3 col-md-6">
                <label class="form-label fw-semibold">Jenis Laporan</label>
                <select id="jenisSelect" class="form-select form-select" required>
                    <option value="">-- Pilih Jenis --</option>
                    <% Object.entries(JENIS_MAP).forEach(([kode, nama])=> { %>
                        <option value="<%= kode %>">
                            <%= nama %>
                        </option>
                        <% }) %>
                </select>
            </div>

            <div class="col-lg-3 col-md-6">
                <label class="form-label fw-semibold">Pimpinan <small class="text-muted">(opsional)</small></label>
                <select id="pimpinanSelect" class="form-select form-select">
                    <option value="">-- Semua / Tanpa Pimpinan --</option>
                    <% pimpinanList.forEach(p=> { %>
                        <option value="<%= p.id_pimpinan %>">
                            <%= p.jabatan_pimpinan %>
                        </option>
                    <% }) %>
                </select>
            </div>

            <div class="col-lg-3 col-md-6">
                <label class="form-label fw-semibold">Periode</label>
                <input type="month" id="monthSelect" class="form-control form-control" required>
            </div>

            <div class="col-lg-3 col-md-6 d-flex align-items-end">
                <button type="submit" class="btn btn-modern btn-primary-modern btn-sm">
                    <i class="bi bi-search me-2"></i>Load Calendar
                </button>
            </div>
        </form>

        <div class="mt-3" id="actionButtons" style="display: none;">
            <button type="button" class="btn btn-modern btn-success-modern me-2 btn-sm" id="downloadMonthBtn">
                <i class="bi bi-cloud-download me-2"></i>Download Bulan Ini
            </button>
            <button type="button" class="btn btn-modern btn-danger-modern btn-sm" id="refreshBtn">
                <i class="bi bi-arrow-clockwise me-2"></i>Refresh Data
            </button>
            <div id="rangeCard" class="card mt-3">
                <div class="card-body">
                    <h6 class="mb-3">Pilih Rentang Periode</h6>
                    <form id="rangeForm" action="/laporan/download-zip" method="POST" class="row g-2 align-items-end">
                        <!-- hidden untuk ikut dropdown -->
                        <input type="hidden" name="jenis_laporan" id="rangeJenis">
                        <input type="hidden" name="id_pimpinan" id="rangePimpinan">

                        <div class="col-md-5">
                            <label class="form-label mb-1">Tanggal Awal</label>
                            <input type="date" name="startDate" id="startDate" class="form-control" required>
                        </div>
                        <div class="col-md-5">
                            <label class="form-label mb-1">Tanggal Akhir</label>
                            <input type="date" name="endDate" id="endDate" class="form-control" required>
                        </div>
                        <div class="col-md-2">
                            <button type="submit" class="btn btn-primary w-100">
                                <i class="bi bi-download me-1"></i> Download
                            </button>
                        </div>
                    </form>
                </div>
            </div>

        </div>
    </div>

    <!-- Calendar Section -->
    <div id="calendarSection" style="display: none;">
        <div class="calendar-wrapper position-relative">
            <!-- Loading Overlay -->
            <div id="loadingOverlay" class="loading-overlay" style="display: none;">
                <div class="text-center">
                    <div class="spinner-border text-primary mb-3" style="width: 3rem; height: 3rem;"></div>
                    <h5>Loading Calendar...</h5>
                    <p class="mb-0">Mengambil data laporan...</p>
                </div>
            </div>

            <!-- Calendar Header -->
            <div class="d-flex flex-wrap justify-content-between align-items-center mb-4">
                <h3 class="mb-0" id="calendarTitle">
                    <i class="bi bi-calendar3 me-2"></i>Calendar View
                </h3>
                <div>
                    <button class="btn month-nav me-2" id="prevMonthBtn">
                        <i class="bi bi-chevron-left me-1"></i>Previous
                    </button>
                    <button class="btn month-nav" id="nextMonthBtn">
                        Next<i class="bi bi-chevron-right ms-1"></i>
                    </button>
                </div>
            </div>

            <!-- Weekday Headers -->
            <div class="row mb-3">
                <div class="col text-center fw-bold fs-6">MIN</div>
                <div class="col text-center fw-bold fs-6">SEN</div>
                <div class="col text-center fw-bold fs-6">SEL</div>
                <div class="col text-center fw-bold fs-6">RAB</div>
                <div class="col text-center fw-bold fs-6">KAM</div>
                <div class="col text-center fw-bold fs-6">JUM</div>
                <div class="col text-center fw-bold fs-6">SAB</div>
            </div>

            <!-- Calendar Grid -->
            <div id="calendarGrid">
                <div class="text-center py-5">
                    <i class="bi bi-calendar-x" style="font-size: 4rem; opacity: 0.5;"></i>
                    <h5 class="mt-3">Select filters to load calendar</h5>
                    <p>Choose jenis laporan, pimpinan, and month to view files</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Info Section -->
    <div class="row mt-4" id="infoSection" style="display: none;">
        <!-- Cara Penggunaan -->
        <div class="col-lg-7 mb-3">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-body">
                    <h6 class="card-title fw-bold text-primary mb-3">
                        <i class="bi bi-info-circle-fill me-2"></i>Cara Penggunaan
                    </h6>
                    <div class="d-flex flex-column gap-3">

                        <!-- Step 1 -->
                        <div class="d-flex">
                            <span
                                class="badge bg-primary rounded-circle d-flex align-items-center justify-content-center me-3"
                                style="width:32px; height:32px;">1</span>
                            <div>
                                <h6 class="mb-1">Filter Data</h6>
                                <p class="mb-0 text-muted small">Pilih jenis laporan, pimpinan, dan periode</p>
                            </div>
                        </div>

                        <!-- Step 2 -->
                        <div class="d-flex">
                            <span
                                class="badge bg-success rounded-circle d-flex align-items-center justify-content-center me-3"
                                style="width:32px; height:32px;">2</span>
                            <div>
                                <h6 class="mb-1">Lihat Calendar</h6>
                                <p class="mb-0 text-muted small">Tanggal dengan file akan berwarna hijau</p>
                            </div>
                        </div>

                        <!-- Step 3 -->
                        <div class="d-flex">
                            <span
                                class="badge bg-warning rounded-circle d-flex align-items-center justify-content-center me-3"
                                style="width:32px; height:32px;">3</span>
                            <div>
                                <h6 class="mb-1">Download File</h6>
                                <p class="mb-0 text-muted small">Klik tanggal hijau untuk download</p>
                            </div>
                        </div>

                        <!-- Step 4 -->
                        <div class="d-flex">
                            <span
                                class="badge bg-danger rounded-circle d-flex align-items-center justify-content-center me-3"
                                style="width:32px; height:32px;">4</span>
                            <div>
                                <h6 class="mb-1">Download Periode Calendar</h6>
                                <p class="mb-0 text-muted small">Pilih rentang periode untuk download sekaligus</p>
                            </div>
                        </div>

                        <!-- Step 5 -->
                        <div class="d-flex">
                            <span
                                class="badge bg-info rounded-circle d-flex align-items-center justify-content-center me-3"
                                style="width:32px; height:32px;">5</span>
                            <div>
                                <h6 class="mb-1">Download Bulk</h6>
                                <p class="mb-0 text-muted small">Download seluruh bulan sekaligus</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Statistics -->
        <div class="col-lg-5 mb-3">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-body">
                    <h6 class="card-title fw-bold text-success mb-3">
                        <i class="bi bi-bar-chart-fill me-2"></i>Statistics
                    </h6>
                    <div id="statsContainer" class="d-flex flex-column gap-3">
                        <div class="text-center py-4 text-muted">
                            <i class="bi bi-pie-chart" style="font-size:2rem;"></i>
                            <p class="mt-2 mb-0">Load calendar untuk melihat statistik</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <script>

        (() => {
            let selecting = false;
            let start = null, end = null;

            const rangeBar = document.getElementById('rangeBar');
            const rangeText = document.getElementById('rangeText');
            const rangeJenis = document.getElementById('rangeJenis');
            const rangePimpinan = document.getElementById('rangePimpinan');
            const rangeYear = document.getElementById('rangeYear');
            const rangeMonth = document.getElementById('rangeMonth');
            const rangeStart = document.getElementById('rangeStart');
            const rangeEnd = document.getElementById('rangeEnd');
            const btnClearRange = document.getElementById('btnClearRange');

            // helper untuk refresh hidden fields dari dropdown/filter yang sudah ada
            function syncHidden() {
                const jenis = document.getElementById('jenisSelect').value;
                const pimp = document.getElementById('pimpinanSelect').value;
                const monthInput = document.getElementById('monthSelect').value; // format YYYY-MM
                const [y, m] = monthInput.split('-');

                rangeJenis.value = jenis;
                rangePimpinan.value = pimp;
                rangeYear.value = y;
                rangeMonth.value = m;
            }

            function updateUI() {
                if (start && end) {
                    rangeText.textContent = `${start}–${end}`;
                    rangeStart.value = String(start).padStart(2, '0');
                    rangeEnd.value = String(end).padStart(2, '0');
                    syncHidden();
                    rangeBar.style.display = 'flex';
                } else {
                    rangeBar.style.display = 'none';
                }
            }

            function clearSel() {
                document.querySelectorAll('.day-cell.selected').forEach(el => el.classList.remove('selected'));
            }

            function paintSel() {
                clearSel();
                if (!start || !end) return;
                const [s, e] = start <= end ? [start, end] : [end, start];
                for (let d = s; d <= e; d++) {
                    const cell = document.querySelector(`.day-cell[data-day="${d}"]`);
                    if (cell && !cell.classList.contains('disabled')) cell.classList.add('selected');
                }
            }

            // event handlers untuk cell tanggal
            function bindCells() {
                document.querySelectorAll('.day-cell').forEach(cell => {
                    if (cell.classList.contains('disabled')) return;

                    cell.addEventListener('mousedown', e => {
                        selecting = true;
                        start = parseInt(cell.dataset.day, 10);
                        end = start;
                        paintSel();
                        updateUI();
                    });

                    cell.addEventListener('mouseover', e => {
                        if (!selecting || start == null) return;
                        end = parseInt(cell.dataset.day, 10);
                        paintSel();
                        updateUI();
                    });

                    cell.addEventListener('mouseup', e => {
                        selecting = false;
                        // normalize agar start <= end
                        if (start && end && start > end) {
                            const tmp = start; start = end; end = tmp;
                            paintSel(); updateUI();
                        }
                    });
                });

                document.addEventListener('mouseup', () => { selecting = false; });
            }

            btnClearRange?.addEventListener('click', () => {
                start = end = null;
                clearSel();
                updateUI();

                // reset hidden form fields juga
                rangeStart.value = '';
                rangeEnd.value = '';
                rangeJenis.value = '';
                rangePimpinan.value = '';
                rangeYear.value = '';
                rangeMonth.value = '';
                rangeText.textContent = '-';
            });

            // panggil ini setiap selesai render kalender bulanan
            window.bindCalendarCellsForRange = bindCells;
        })();

        let currentData = null;
        let currentMonth = null;
        let currentYear = null;

        // Initialize
        document.addEventListener('DOMContentLoaded', function () {
            // Set default month
            const now = new Date();
            const monthStr = (now.getMonth() + 1).toString().padStart(2, '0');
            document.getElementById('monthSelect').value = `${now.getFullYear()}-${monthStr}`;

            // Event listeners
            document.getElementById('filterForm').addEventListener('submit', handleFormSubmit);
            document.getElementById('prevMonthBtn').addEventListener('click', () => changeMonth(-1));
            document.getElementById('nextMonthBtn').addEventListener('click', () => changeMonth(1));
            document.getElementById('downloadMonthBtn').addEventListener('click', downloadMonth);
            document.getElementById('refreshBtn').addEventListener('click', loadCalendarData);

            document.getElementById('jenisSelect').addEventListener('change', syncRangeHidden);
            document.getElementById('pimpinanSelect').addEventListener('change', syncRangeHidden);

            document.getElementById('monthSelect').addEventListener('change', setRangeDefaults)

            document.getElementById('rangeForm').addEventListener('submit', validateRange);
        });

        function handleFormSubmit(e) {
            e.preventDefault();
            loadCalendarData();
        }

        async function loadCalendarData() {
            const jenis = document.getElementById('jenisSelect').value;
            const pimpinan = document.getElementById('pimpinanSelect').value;
            const monthInput = document.getElementById('monthSelect').value;

            if (!jenis || !pimpinan || !monthInput) {
                alert('Harap lengkapi semua filter!');
                return;
            }

            const [year, month] = monthInput.split('-');
            currentYear = parseInt(year);
            currentMonth = parseInt(month);

            showLoading(true);

            try {
                const pimpinanParam = pimpinan || '';
                const response = await fetch(`/laporan/api/calendar-data?jenis_laporan=${jenis}&id_pimpinan=${pimpinan}&year=${year}&month=${month}`);
                const data = await response.json();

                currentData = data;
                renderCalendar();
                updateStats();
                setRangeDefaults();
                syncRangeHidden();
                showSections(data.dates.length > 0);

            } catch (error) {
                console.error('Error:', error);
                alert('Gagal memuat data calendar');
            } finally {
                showLoading(false);
            }
        }

        function syncRangeHidden() {
            const jenis = document.getElementById('jenisSelect').value || '';
            const pimp = document.getElementById('pimpinanSelect').value || '';
            document.getElementById('rangeJenis').value = jenis;
            document.getElementById('rangePimpinan').value = pimp;
        }

        function setRangeDefaults() {
            const monthInput = document.getElementById('monthSelect').value; // format "YYYY-MM"
            if (!monthInput) return;

            const [y, m] = monthInput.split('-').map(Number);
            const first = new Date(y, m - 1, 1);     // hari pertama bulan tsb
            const last = new Date(y, m, 0);         // hari terakhir bulan tsb

            const fmt = (d) => d.toISOString().slice(0, 10); // ubah ke format YYYY-MM-DD

            document.getElementById('startDate').value = fmt(first);
            document.getElementById('endDate').value = fmt(last);
        }

        function validateRange(e) {
            syncRangeHidden(); // pastikan hidden sudah sync

            const s = document.getElementById('startDate').value;
            const t = document.getElementById('endDate').value;

            if (s && t && new Date(t) < new Date(s)) {
                e.preventDefault(); // hentikan submit
                alert('Tanggal akhir tidak boleh lebih kecil dari tanggal awal.');
                return false;
            }
            return true;
        }

        function renderCalendar() {
            const grid = document.getElementById('calendarGrid');
            const title = document.getElementById('calendarTitle');

            // Update title
            const monthNames = ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni',
                'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember'];
            title.innerHTML = `<i class="bi bi-calendar3 me-2"></i>${monthNames[currentMonth - 1]} ${currentYear}`;

            // Calendar calculation
            const firstDay = new Date(currentYear, currentMonth - 1, 1).getDay();
            const daysInMonth = new Date(currentYear, currentMonth, 0).getDate();

            let html = '';
            let dayCount = 1;

            // Generate 6 weeks max
            for (let week = 0; week < 6; week++) {
                html += '<div class="row mb-2">';

                for (let day = 0; day < 7; day++) {
                    if (week === 0 && day < firstDay) {
                        // Empty cells before month
                        html += '<div class="col"><div class="calendar-day empty-day"></div></div>';
                    } else if (dayCount <= daysInMonth) {
                        // Days of month
                        const dayData = currentData.dates.find(d => d.day === dayCount);
                        const hasFiles = dayData && dayData.fileCount > 0;

                        html += `
                    <div class="col">
                        <div class="calendar-day day-cell ${hasFiles ? 'has-files' : 'disabled'}"
                            data-day="${dayCount}"
                             ${hasFiles ? `onclick="downloadDay(${dayCount})" title="Click to download ${dayData.fileCount} files"` : ''}>
                            <div class="day-number">${dayCount}</div>
                            ${hasFiles ? `
                                <div class="file-badge">${dayData.fileCount}</div>
                                <div class="file-list">
                                    ${dayData.files.slice(0, 2).map(f =>
                            `<div style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">${f.name.substring(13, 30)}...</div>`
                        ).join('')}
                                    ${dayData.files.length > 2 ? `<div>+${dayData.files.length - 2} more</div>` : ''}
                                </div>
                            ` : ''}
                        </div>
                    </div>
                `;
                        dayCount++;
                    } else {
                        // Empty cells after month
                        html += '<div class="col"><div class="calendar-day empty-day"></div></div>';
                    }
                }

                html += '</div>';
                if (dayCount > daysInMonth) break;
            }

            grid.innerHTML = html;
            if (typeof window.bindCalendarCellsForRange === 'function') {
                window.bindCalendarCellsForRange();
            }
        }

        function changeMonth(direction) {
            currentMonth += direction;

            if (currentMonth < 1) {
                currentMonth = 12;
                currentYear--;
            } else if (currentMonth > 12) {
                currentMonth = 1;
                currentYear++;
            }

            // Update month input
            const monthStr = currentMonth.toString().padStart(2, '0');
            document.getElementById('monthSelect').value = `${currentYear}-${monthStr}`;

            loadCalendarData();
        }

        function downloadDay(day) {
            const jenis = document.getElementById('jenisSelect').value;
            const pimpinan = document.getElementById('pimpinanSelect').value;
            const dayStr = day.toString().padStart(2, '0');

            submitDownloadForm({
                jenis_laporan: jenis,
                id_pimpinan: pimpinan,
                year: currentYear,
                month: currentMonth.toString().padStart(2, '0'),
                day: dayStr
            });
        }

        function downloadMonth() {
            const jenis = document.getElementById('jenisSelect').value;
            const pimpinan = document.getElementById('pimpinanSelect').value;

            submitDownloadForm({
                jenis_laporan: jenis,
                id_pimpinan: pimpinan,
                year: currentYear,
                month: currentMonth.toString().padStart(2, '0')
            });
        }

        function submitDownloadForm(data) {
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = '/laporan/download-zip';

            Object.entries(data).forEach(([key, value]) => {
                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = key;
                input.value = value;
                form.appendChild(input);
            });

            document.body.appendChild(form);
            form.submit();
            document.body.removeChild(form);
        }

        function updateStats() {
            const container = document.getElementById('statsContainer');
            const totalDays = currentData.dates.length;
            const totalFiles = currentData.dates.reduce((sum, day) => sum + day.fileCount, 0);

            container.innerHTML = `
        <div class="stats-item">
            <div class="d-flex justify-content-between">
                <span><i class="bi bi-calendar-check me-2"></i>Hari Aktif</span>
                <span class="badge bg-primary">${totalDays}</span>
            </div>
        </div>
        <div class="stats-item">
            <div class="d-flex justify-content-between">
                <span><i class="bi bi-files me-2"></i>Total File</span>
                <span class="badge bg-success">${totalFiles}</span>
            </div>
        </div>
        <div class="stats-item">
            <div class="d-flex justify-content-between">
                <span><i class="bi bi-calendar-range me-2"></i>Periode</span>
                <span class="badge bg-info">${currentMonth}/${currentYear}</span>
            </div>
        </div>
    `;
        }

        function showSections(hasData) {
            document.getElementById('calendarSection').style.display = 'block';
            document.getElementById('infoSection').style.display = 'flex';
            document.getElementById('actionButtons').style.display = hasData ? 'block' : 'none';
        }

        function showLoading(show) {
            document.getElementById('loadingOverlay').style.display = show ? 'flex' : 'none';
        }
    </script>